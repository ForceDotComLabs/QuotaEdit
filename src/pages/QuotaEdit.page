<apex:page controller="QuotaController">
	<apex:form >
		<apex:selectList value="{!startDatePeriod}" multiSelect="false" size="1">
			<apex:actionSupport event="onchange" reRender="quotaTable" status="updatingStatus"/>
			<apex:selectOptions value="{!availablePeriods}"/>
		</apex:selectList>&nbsp;
		<apex:actionStatus id="updatingStatus" startText=" (refreshing...)" stopText=""/>
       	<apex:commandLink action="{!showPopup}" style="color:blue" value="Using quarterly forecasts?" rerender="quarterlyPopup"/><br/>
		
		<apex:outputText value="{!headerMessage}"/>
	
		<apex:outputPanel id="quarterlyPopup">
    	    <apex:outputPanel styleClass="popupBackground" layout="block" rendered="{!displayPopUp}"/>
            <apex:outputPanel styleClass="custPopup" layout="block" rendered="{!displayPopUp}">
            	To enter a quarterly forecast, choose the beginning month of the quarter.
            	For example, if the fiscal year starts in February, fill in quarterly quotas
            	using February, May, August, and November.
                <br/><br/>Leave the other months blank.<br/><br/><br/>
                <apex:commandButton value="OK" action="{!closePopup}" rerender="quarterlyPopup"/>
            </apex:outputPanel>
    </apex:outputPanel>
	</apex:form><br/>
        	
    <apex:form id="quotaTable">
        <apex:pageBlock id="pageBlock" title="Quotas for period starting {!startDatePeriod}">
            <apex:pageMessages />
            <apex:pageBlockButtons >
                <apex:commandButton value="Save" action="{!save}" disabled="{!saveDisabled}"/>
            </apex:pageBlockButtons>
    		<apex:pageBlockTable id="pageBlockTable" style="width:350px" value="{!quotas}" var="q">
 		        	<apex:column id="nameColumn" headerValue="Name">
		        		<apex:outputText value="{!q.ownerName}" style="width:150px"/>
		        	</apex:column>

 	        		<apex:column id="quotaColumn" headerValue="Quota (amount)" style="width:100px;height:20px">
	        			<apex:inputText id="quotaInput" size="11" value="{!q.amount}"
 	        				rendered="{!ISNULL(q.amount) || q.ownerId == editUserId}"/>
 	        			<apex:commandLink id="quotaOutput" action="{!editCell}" value="{!q.amountString}" 
	        				rendered="{!q.ownerId != editUserId}" style="color:blue"
         					rerender="quotaColumn"> 
	        				<apex:param name="editOwnerId" value="{!q.ownerId}"/>
						</apex:commandLink>
        			        			
         			</apex:column>
 	        		<apex:column id="currencyColumn" headerValue="Currency" style="width:100px" rendered="{!RenderCurrencyColumn}">
	        			<apex:selectList value="{!q.currencyIsoCode}" multiSelect="false" size="1">
	        				<apex:selectOptions value="{!AvailableIsoCodes}"/>
	        			</apex:selectList>
	        		</apex:column>
    		
    		</apex:pageBlockTable>
		</apex:pageBlock>
    </apex:form>
    
    <style type="text/css">
        .custPopup{
            background-color: white;
            border-width: 2px;
            border-style: solid;
            z-index: 9999;
            left: 50%;
            padding:10px;
            position: absolute;
            /* These are the 3 css properties you will need to change so the popup 
            displays in the center of the screen. First set the width. Then set 
            margin-left to negative half of what the width is. You can add 
            the height property for a fixed size pop up if you want.*/
            width: 500px;
            margin-left: -250px;
            top:100px;
        }
        .popupBackground{
            background-color:black;
            opacity: 0.20;
            filter: alpha(opacity = 20);
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: 9998;
        }
    </style>
</apex:page>